<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd"
       >
    <context:annotation-config/>
    <context:component-scan base-package="sws"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/iradb"/>
        <property name="username" value="root"/>
        <property name="password" value="Pass4root"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <value>sws.model.Data</value>
                <value>sws.model.Link</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="payloadMapping"
          class="org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping">
        <property name="interceptors">
            <list>
                <!--<ref local="validatingInterceptor"/>-->
                <ref local="loggingInterceptor"/>
            </list>
        </property>
    </bean>

    <bean id="validatingInterceptor"
          class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor">
        <property name="xsdSchema" ref="schema"/>
        <property name="validateRequest" value="true"/>
        <property name="validateResponse" value="true"/>
    </bean>

    <!--<bean class="org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter"/> -->

    <bean id="loggingInterceptor" class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor">
        <description>
            This interceptor logs the message payload.
        </description>
        <property name="loggerName" value="LoggerNameNew"/>
        <property name="logRequest" value="true"/>
        <property name="logResponse" value="true"/>
    </bean>


    <!--<bean id="marshallingProcessor"
          class="org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessor">
        <constructor-arg index="0" ref="marshallerJaxb"/>
        <constructor-arg index="1" ref="marshallerJaxb"/>
    </bean>

    <bean id="endpointAdapter"
          class="org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter">
        <property name="methodArgumentResolvers">
            <list>
                <ref bean="marshallingProcessor"/>
            </list>
        </property>
    </bean>-->

    <bean id="endpointAdapterDeprecated"
          class="org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapter">
        <constructor-arg index="0" ref="marshallerJaxb"/>
        <constructor-arg index="1" ref="marshallerJaxb"/>
    </bean>

    <bean id="marshallerJaxb" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>sws.dto.DataRequest</value>
                <value>sws.dto.DataResponce</value>
                <value>sws.dto.LinkResponce</value>
                <value>sws.dto.LinkRequest</value>
            </list>

        </property>

    </bean>

    <!--<bean id="dataEndPoint" class="sws.ws.DataEndPoint">-->
    <!--<constructor-arg ref="dataService"/>-->
    <!--</bean>-->


    <bean id="data" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition">
        <property name="schemaCollection" ref="schemaCollection"/>
        <property name="portTypeName" value="Data"/>
        <property name="locationUri" value="http://localhost:8080/sws/soap/services"/>
    </bean>

    <bean id="schema" class="org.springframework.xml.xsd.SimpleXsdSchema">
        <description>
            This bean definition contains the XSD schema.
        </description>
        <property name="xsd" value="/WEB-INF/data.xsd"/>
    </bean>

    <bean id="schemaCollection" class="org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection">
    <property name="xsds">
        <list>
            <value>/WEB-INF/data.xsd</value>
            <value>/WEB-INF/link.xsd</value>
        </list>
    </property>
    <property name="inline" value="true"/>
</bean>

    <bean id="exceptionResolver"
          class="org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver">
        <property name="defaultFault" value="SERVER"/>
        <property name="warnLogCategory" value="ssss"/>
        <property name="exceptionMappings">
            <value>
                org.springframework.oxm.XmlMappingException=SERVER,Oops...
            </value>
        </property>
    </bean>

</beans>