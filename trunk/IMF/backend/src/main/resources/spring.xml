<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd"
       default-autowire="byName">
    <context:annotation-config/>
    <cache:annotation-driven/>
    <context:component-scan base-package="imf"/>

    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentCacheFactoryBean" name="default"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentCacheFactoryBean" name="values"
                      id="values"/>
            </set>
        </property>
    </bean>

    <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/imf"/>
        <property name="username" value="imuser"/>
        <property name="password" value="Pass4im"/>
    </bean>

    <bean id="c3po" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="org.postgresql.Driver"/>
        <property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/imf"/>
        <property name="user" value="imuser"/>
        <property name="password" value="Pass4im"/>
        <property name="maxPoolSize" value="50"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="c3po"/>
        <property name="annotatedClasses">
            <list>
                <value>imf.core.entity.UnitsGroup</value>
                <value>imf.core.entity.UnitOfMeasure</value>
                <value>imf.core.entity.Substitute</value>
                <value>imf.core.entity.SubsGroup</value>
                <value>imf.core.entity.Attribute</value>
                <value>imf.core.entity.Group</value>
                <value>imf.core.entity.Attribute2Group</value>
                <value>imf.core.entity.Group2Template</value>
                <value>imf.core.entity.Template</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
                <prop key="hibernate.default_schema">imf</prop>
            </props>
        </property>
    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" mode="proxy"/>

    <bean id="longType" class="org.hibernate.type.LongType"/>
    <bean id="stringType" class="org.hibernate.type.StringType"/>
    <bean id="integerType" class="org.hibernate.type.IntegerType"/>
    <bean id="byteType" class="org.hibernate.type.ByteType"/>
    <bean id="booleanType" class="org.hibernate.type.BooleanType"/>


    <bean id="sqlScalarTypesConfig" class="imf.core.config.SqlScalarTypesConfig">
        <property name="scalarMap">
            <map>
                <entry key="ScalarTypes4AttributesDto">
                    <map>
                        <entry key="id" value-ref="longType"/>
                        <entry key="name" value-ref="stringType"/>
                        <entry key="comment" value-ref="stringType"/>
                        <entry key="unitsGroup" value-ref="longType"/>
                        <entry key="subsGroup" value-ref="longType"/>
                        <entry key="unitOfMeasure" value-ref="longType"/>
                        <entry key="type" value-ref="byteType"/>
                        <entry key="typeOfValues" value-ref="byteType"/>
                        <entry key="weight" value-ref="integerType"/>
                        <entry key="comment4Group" value-ref="stringType"/>
                    </map>
                </entry>
                <entry key="ScalarTypes4GroupsDto">
                    <map>
                        <entry key="groupId" value-ref="longType"/>
                        <entry key="groupName" value-ref="stringType"/>
                        <entry key="attributeId" value-ref="longType"/>
                        <entry key="attributeName" value-ref="stringType"/>
                        <entry key="attributeComment" value-ref="stringType"/>
                        <entry key="unitsGroup" value-ref="longType"/>
                        <entry key="subsGroup" value-ref="longType"/>
                        <entry key="unitOfMeasure" value-ref="longType"/>
                        <entry key="attributeType" value-ref="byteType"/>
                        <entry key="typeOfValues" value-ref="byteType"/>
                        <entry key="weight" value-ref="integerType"/>
                        <entry key="comment4Group" value-ref="stringType"/>
                    </map>
                </entry>
                <entry key="ScalarTypes4TemplatesDto">
                    <map>
                        <entry key="templateId" value-ref="longType"/>
                        <entry key="templateName" value-ref="stringType"/>
                        <entry key="groupId" value-ref="longType"/>
                        <entry key="groupName" value-ref="stringType"/>
                        <entry key="attributeId" value-ref="longType"/>
                        <entry key="attributeName" value-ref="stringType"/>
                        <entry key="attributeWeight" value-ref="integerType"/>
                        <entry key="groupWeight" value-ref="integerType"/>
                        <entry key="attributeRequire" value-ref="booleanType"/>
                        <entry key="attributeComposite" value-ref="booleanType"/>
                    </map>
                </entry>
            </map>
        </property>
        <property name="sqlMap">
            <map>
                <entry key="sql4AttributesDto">
                    <value>
                        <![CDATA[
                                 select
	                                 atr.id,
                                 	 atr.comment,
                                 	 atr.name,
                                 	 atr.type,
                                 	 atr.type_of_values as typeOfValues,
                                 	 atr.subs_group_id as subsGroup,
                                 	 atr.unit_id as unitOfMeasure,
                                 	 atr.unit_group_id as unitsGroup,
                                 	 a2g.weight as weight,
                                 	 a2g.comment as comment4Group
                                 from
                                 	 imf.attribute atr
                                 	 inner join imf.attribute_2_group a2g
                                 	 	on   a2g.attribute_id = atr.id
                                 	 inner join imf.group grp
                                 	 	on   grp.id = a2g.group_id
                                 where
                                 	 grp.id = ?
                                 order by
                                 	 a2g.weight
                        ]]>
                    </value>
                </entry>
                <entry key="sql4GroupsDto">
                    <value>
                        <![CDATA[
                                 select
                                 	grp.id as groupId,
                                 	grp.name as groupName,
                                 	atr.id as attributeId,
                                 	atr.comment as attributeComment,
                                 	atr.name as attributeName,
                                 	atr.type as attributeType,
                                 	atr.type_of_values as typeOfValues,
                                 	atr.subs_group_id as subsGroup,
                                 	atr.unit_id as unitOfMeasure,
                                 	atr.unit_group_id as unitsGroup,
                                 	a2g.weight as weight,
                                 	a2g.comment as comment4Group
                                 from
                                 	imf.attribute atr
                                 	inner join imf.attribute_2_group a2g
                                 		on   a2g.attribute_id = atr.id
                                 	inner join imf.group grp
                                 		on   grp.id = a2g.group_id
                                 		     and grp.id in (select
                                 		                    	g.id
                                 		                    from
                                 		                    	imf.group g
                                 		                    where
		                    	                                g.name like :groupName limit :maxResult offset :firstResult)
                                 order by
                                 	grp.name,
                                 	a2g.weight
                        ]]>
                    </value>
                </entry>
                <entry key="sql4TemplatesDto">
                    <value>
                        <![CDATA[
                                 select
                                 	 tpl.id as "templateId",
                                 	 tpl."name" as "templateName",
                                 	 grp.id as "groupId",
                                 	 grp."name" as "groupName",
                                 	 atr.id as "attributeId",
                                 	 atr."name" as "attributeName",
                                 	 g2t.weight as "attributeWeight",
                                 	 a2g.weight as "groupWeight",
                                 	 a2g2t.required as "attributeRequire",
                                 	 a2g2t.composite as "attributeComposite"
                                 from
                                 	 imf.attribute atr
                                 	 inner join imf.attribute_2_group a2g
                                 	 	on   a2g.attribute_id = atr.id
                                 	 inner join imf."group" grp
                                 	 	on   grp.id = a2g.group_id
                                 	 inner join imf.group_2_template g2t
                                 	 	on   g2t.group_id = grp.id
                                 	 inner join imf."template" tpl
                                 	 	on   tpl.id = g2t.template_id
                                 	 inner join imf.attribute_2_group_2_template a2g2t
                                 	 	on   a2g2t.attribute_id = atr.id
                                 	 	and a2g2t.group_id = grp.id
                                 	 	and a2g2t.template_id = tpl.id
                                 where
                                 	 tpl.id = :templateId
                                 order by
                                 	 g2t.weight,
                                 	 a2g.weight
                        ]]>
                    </value>
                </entry>
            </map>
        </property>
    </bean>


</beans>