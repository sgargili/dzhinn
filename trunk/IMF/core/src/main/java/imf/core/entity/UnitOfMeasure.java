package imf.core.entity;

import javax.persistence.*;

/**
 * UnitOfMeasure generated by hbm2java
 */
@Entity
@Table(name = "unit_of_measure")
@NamedQueries({
        @NamedQuery(name = "UnitOfMeasure.findAllUnitsOfMeasureCount", query = "select count(*) from UnitOfMeasure"),
        @NamedQuery(name = "UnitOfMeasure.findAllUnitsOfMeasureCountById", query = "select count(*) from UnitOfMeasure unit where unit.unitsGroup.id = :id")
})

public class UnitOfMeasure implements java.io.Serializable {


    private Long id;
    private UnitsGroup unitsGroup;
    private String name;
    private String prefix;
    private float ratio;
    private String comment;
    private boolean defaultValue;
//    private Set substitutes = new HashSet(0);
//    private Set attributes = new HashSet(0);

    public UnitOfMeasure() {
    }


    public UnitOfMeasure(String name, float ratio, boolean defaultValue) {
        this.name = name;
        this.ratio = ratio;
        this.defaultValue = defaultValue;
    }

//    public UnitOfMeasure(UnitsGroup unitsGroup, String name, String prefix, float ratio, String comment, boolean defaultValue, Set substitutes, Set attributes) {
//        this.unitsGroup = unitsGroup;
//        this.name = name;
//        this.prefix = prefix;
//        this.ratio = ratio;
//        this.comment = comment;
//        this.defaultValue = defaultValue;
//        this.substitutes = substitutes;
//        this.attributes = attributes;
//    }

    @Id
//    @SequenceGenerator(name = "units_of_measure_seq", sequenceName = "units_of_measure_id", allocationSize = 1)
//    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "units_of_measure_seq")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ug_id")
    public UnitsGroup getUnitsGroup() {
        return this.unitsGroup;
    }

    public void setUnitsGroup(UnitsGroup unitsGroup) {
        this.unitsGroup = unitsGroup;
    }

    @Column(name = "name", nullable = false, length = 512)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "prefix", length = 32)
    public String getPrefix() {
        return this.prefix;
    }

    public void setPrefix(String prefix) {
        this.prefix = prefix;
    }

    @Column(name = "ratio", nullable = false, precision = 12, scale = 0)
    public float getRatio() {
        return this.ratio;
    }

    public void setRatio(float ratio) {
        this.ratio = ratio;
    }

    @Column(name = "comment", length = 1024)
    public String getComment() {
        return this.comment;
    }

    public void setComment(String comment) {
        this.comment = comment;
    }

    @Column(name = "default_value", nullable = false)
    public boolean isDefaultValue() {
        return this.defaultValue;
    }

    public void setDefaultValue(boolean defaultValue) {
        this.defaultValue = defaultValue;
    }

//    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "unitOfMeasure", targetEntity = Substitute.class)
//    public Set getSubstitutes() {
//        return this.substitutes;
//    }
//
//    public void setSubstitutes(Set substitutes) {
//        this.substitutes = substitutes;
//    }
//
//    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "unitOfMeasure", targetEntity = Attribute.class)
//    public Set getAttributes() {
//        return this.attributes;
//    }
//
//    public void setAttributes(Set attributes) {
//        this.attributes = attributes;
//    }


}


