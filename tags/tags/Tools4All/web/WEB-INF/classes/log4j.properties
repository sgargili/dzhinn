#--------------------------------------------------
# Configuration for the log4j logging system:
# logging to  console, file, and xml file
#
# Document   : log4j.properties
# Created on : 24.11.2009 12:56:46
# Author     : APopov
#--------------------------------------------------

#--------------------------------------------------
# Set the root output level and appenders
log4j.rootLogger=INFO, console

#--------------------------------------------------
# add here more categories, like:
# log4j.{category}={priority}
#
# allowed priority values:
# ALL   - The ALL has the lowest possible rank and is intended to turn on all logging.
# DEBUG - The DEBUG Level designates fine-grained informational events that are most useful to debug an application.
# ERROR - The ERROR level designates error events that might still allow the application to continue running.
# FATAL - The FATAL level designates very severe error events that will presumably lead the application to abort.
# INFO  - The INFO level designates informational messages that highlight the progress of the application at coarse-grained level.
# OFF   - The OFF has the highest possible rank and is intended to turn off logging.
# TRACE - The TRACE Level designates finer-grained informational events than the DEBUG
# WARN  - The WARN level designates potentially harmful situations.
#log4.foo.bar=DEBUG

#--------------------------------------------------
# 'console' uses a ConsoleAppender which outputs to System.out.
log4j.appender.console=org.apache.log4j.ConsoleAppender
# 'console' uses PatternLayout.
log4j.appender.console.layout=org.apache.log4j.PatternLayout
# The conversion pattern uses format specifiers. You might want to
# change the pattern an watch the output format change.
#
# ConversionCharacters:
# c - category
# C - class (performance!)
# d - date
# F - file name (performance!)
# l - caller location (performance!)
# L - caller line number (performance!)
# m - message
# M - method name (performance!)
# n - new line
# p - priority
# r - ms
# t - thread
# x - NDC context
# X - MDC
# % - single percent
#
log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c : %m%n

#--------------------------------------------------
# Create an appender logging to file, rotate daily
# backup file yyyyMMdd
#
#log4j.appender.rollingDay=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.rollingDay.file=C://log4j.log
#log4j.appender.rollingDay.append=true
#log4j.appender.rollingDay.layout=org.apache.log4j.PatternLayout
#log4j.appender.rollingDay.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c : %m%n

log4j.logger.org.directwebremoting=INFO

# Set this to DEBUG to see what's happening on startup
log4j.logger.org.directwebremoting.log.startup=INFO

# Set this to DEBUG to see the created scripts
log4j.logger.org.directwebremoting.log.scripts=DEBUG

# Set these to DEBUG to see session lifecycle information
log4j.logger.org.directwebremoting.log.session=DEBUG

log4j.logger.org.testdwr=WARN
log4j.logger.org.springframework=WARN
